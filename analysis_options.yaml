# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

analyzer:
  errors:
    # Tắt các lỗi phổ biến nhất gây ra vấn đề
    avoid_print: ignore
    use_key_in_widget_constructors: ignore
    use_super_parameters: ignore
    always_put_required_named_parameters_first: ignore
    use_build_context_synchronously: ignore
    library_private_types_in_public_api: ignore
    prefer_final_fields: ignore
    unused_field: ignore
    unused_local_variable: ignore
    unused_import: ignore
    unused_element: ignore

linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at https://dart.dev/lints.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  rules:
    always_put_required_named_parameters_first: true
    avoid_print: true
    prefer_const_constructors: false